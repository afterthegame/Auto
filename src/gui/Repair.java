/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import auto.InputDataController;
import static java.awt.Component.LEFT_ALIGNMENT;
import java.awt.FlowLayout;
import java.util.ArrayList;
import javax.swing.BoxLayout;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author gorz
 */
public class Repair extends javax.swing.JFrame {

    private GuiController controller;
    private InputDataController inputDataController;
    private ArrayList<Panel> listOfMaterials;
    private ArrayList<Panel> listOfComponents;
    /**
     * Creates new form Repair
     */
    public Repair(GuiController controller, InputDataController inputDataController) {
        initComponents();
        this.controller = controller;
        this.inputDataController = inputDataController;
        materials.setLayout(new BoxLayout(materials, BoxLayout.Y_AXIS));
        components.setLayout(new BoxLayout(components, BoxLayout.Y_AXIS));
        ArrayList<String> m = inputDataController.getMaterials();
        listOfMaterials = new ArrayList<Panel>();
        listOfComponents = new ArrayList<Panel>();
        for(String n : m) {
            Panel p = new Panel(n);
            p.setAlignmentX(LEFT_ALIGNMENT);
            listOfMaterials.add(p);
            materials.add(p);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        repair = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        materials = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        components = new javax.swing.JPanel();
        back = new javax.swing.JButton();
        next = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        liquidity = new javax.swing.JTextField();
        renewable = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jLabel1.setText("Ремонт");

        jLabel2.setText("Трудоемкость ремонта в нормо-часах:");

        repair.setText("0");

        jLabel3.setText("Материалы:");

        javax.swing.GroupLayout materialsLayout = new javax.swing.GroupLayout(materials);
        materials.setLayout(materialsLayout);
        materialsLayout.setHorizontalGroup(
            materialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 357, Short.MAX_VALUE)
        );
        materialsLayout.setVerticalGroup(
            materialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(materials);

        jLabel4.setText("Комплектующие:");

        javax.swing.GroupLayout componentsLayout = new javax.swing.GroupLayout(components);
        components.setLayout(componentsLayout);
        componentsLayout.setHorizontalGroup(
            componentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 357, Short.MAX_VALUE)
        );
        componentsLayout.setVerticalGroup(
            componentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );

        jScrollPane2.setViewportView(components);

        back.setText("Назад");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        next.setText("Продолжить");
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        jLabel5.setText("Коэффцикиент ликвидности:");

        renewable.setText("Обновление ТС невозможно");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(162, 162, 162)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(liquidity, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(renewable))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(repair))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(back)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(next)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(repair, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(liquidity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(renewable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(next)
                    .addComponent(back))
                .addGap(0, 19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        controller.changeFrame("components");
    }//GEN-LAST:event_backActionPerformed

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        ArrayList<Integer> seletedComponents = new ArrayList<Integer>();
        for(Panel p : listOfComponents) {
            if(p.isCheck()) {
                seletedComponents.add(p.getInt());
            } else {
                seletedComponents.add(null);
            }
        }
        ArrayList<Float> seletedMaterials = new ArrayList<Float>();
        for(Panel p : listOfMaterials) {
            if(p.isCheck()) {
                seletedMaterials.add(p.getFloat());
            } else {
                seletedMaterials.add(null);
            }
        }
        inputDataController.setRepairComponents(
                Float.valueOf(repair.getText()),
                seletedMaterials,
                seletedComponents);
        inputDataController.setLiquidityFactor(
                Float.valueOf(liquidity.getText()), 
                !renewable.isSelected());
        try {
            JOptionPane.showMessageDialog(
                    this, 
                    "C = "+inputDataController.getCost()+"\n"+
                    "Cл = "+inputDataController.getLiquidityPrice()+"\n"+
                    "У = "+inputDataController.getDamage()
            );
        } catch(Exception e) {
            JOptionPane.showMessageDialog(
                    this, 
                    "Ошибка: "+e.getMessage()
            );
        }
        /*JOptionPane.showMessageDialog(this, 
                ""+inputDataController.getRapairCost(Float.valueOf(repair.getText())));

        JOptionPane.showMessageDialog(this, 
                ""+inputDataController.getMaterialsCost(seletedMaterials));

        JOptionPane.showMessageDialog(this, 
                ""+inputDataController.getComponentsCost(seletedComponents));*/
    }//GEN-LAST:event_nextActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        components.removeAll();
        listOfComponents.clear();
        for(Panel p : listOfMaterials) {
            p.uncheck();
            p.count.setText("0");
        }
        ArrayList<String> c = inputDataController.getComponents();
        for(String n : c) {
            Panel p = new Panel(n);
            p.setAlignmentX(LEFT_ALIGNMENT);
            listOfComponents.add(p);
            components.add(p);
        }        
    }//GEN-LAST:event_formComponentShown

    class Panel extends JPanel {
        JCheckBox box;
        JTextField count;
        JLabel name;
        
        public Panel(String name) {
            box = new JCheckBox();
            count = new JTextField("0", 5);
            this.name = new JLabel(name);
            setLayout(new FlowLayout(FlowLayout.LEADING));
            add(box);
            add(count);
            add(this.name);
            setMaximumSize(getPreferredSize());
        }
        
        public boolean isCheck() {
            return box.isSelected();
        }
        
        public void uncheck() {
            box.setSelected(false);
        }
        
        public Integer getInt() {
            return Integer.valueOf(count.getText());
        }
        
        public Float getFloat() {
            return Float.valueOf(count.getText());
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JPanel components;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField liquidity;
    private javax.swing.JPanel materials;
    private javax.swing.JButton next;
    private javax.swing.JCheckBox renewable;
    private javax.swing.JTextField repair;
    // End of variables declaration//GEN-END:variables
}
